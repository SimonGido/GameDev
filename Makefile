# GNU Make workspace makefile autogenerated by Premake

.NOTPARALLEL:

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  GLFW_config = debug
  GLEW_config = debug
  OpenAL_Soft_config = debug
  FreeType_config = debug
  Lua_config = debug
  TrianglePP_config = debug
  XYZEngine_config = debug
  XYZEditor_config = debug
  XYZSandbox_config = debug
  XYZServer_config = debug
  XYZClient_config = debug
  XYZScriptCore_config = debug
  XYZScriptExample_config = debug
endif
ifeq ($(config),release)
  GLFW_config = release
  GLEW_config = release
  OpenAL_Soft_config = release
  FreeType_config = release
  Lua_config = release
  TrianglePP_config = release
  XYZEngine_config = release
  XYZEditor_config = release
  XYZSandbox_config = release
  XYZServer_config = release
  XYZClient_config = release
  XYZScriptCore_config = release
  XYZScriptExample_config = release
endif

PROJECTS := GLFW GLEW OpenAL-Soft FreeType Lua TrianglePP XYZEngine XYZEditor XYZSandbox XYZServer XYZClient XYZScriptCore XYZScriptExample

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

GLFW:
ifneq (,$(GLFW_config))
	@echo "==== Building GLFW ($(GLFW_config)) ===="
	@${MAKE} --no-print-directory -C XYZEngine/vendor/GLFW -f Makefile config=$(GLFW_config)
endif

GLEW:
ifneq (,$(GLEW_config))
	@echo "==== Building GLEW ($(GLEW_config)) ===="
	@${MAKE} --no-print-directory -C XYZEngine/vendor/GLEW -f Makefile config=$(GLEW_config)
endif

OpenAL-Soft:
ifneq (,$(OpenAL_Soft_config))
	@echo "==== Building OpenAL-Soft ($(OpenAL_Soft_config)) ===="
	@${MAKE} --no-print-directory -C XYZEngine/vendor/OpenAL-Soft -f Makefile config=$(OpenAL_Soft_config)
endif

FreeType:
ifneq (,$(FreeType_config))
	@echo "==== Building FreeType ($(FreeType_config)) ===="
	@${MAKE} --no-print-directory -C XYZEngine/vendor/freetype-2.10.1 -f Makefile config=$(FreeType_config)
endif

Lua:
ifneq (,$(Lua_config))
	@echo "==== Building Lua ($(Lua_config)) ===="
	@${MAKE} --no-print-directory -C XYZEngine/vendor/lua -f Makefile config=$(Lua_config)
endif

TrianglePP:
ifneq (,$(TrianglePP_config))
	@echo "==== Building TrianglePP ($(TrianglePP_config)) ===="
	@${MAKE} --no-print-directory -C XYZEngine/vendor/TrianglePP -f Makefile config=$(TrianglePP_config)
endif

XYZEngine: GLEW GLFW OpenAL-Soft FreeType Lua TrianglePP
ifneq (,$(XYZEngine_config))
	@echo "==== Building XYZEngine ($(XYZEngine_config)) ===="
	@${MAKE} --no-print-directory -C XYZEngine -f Makefile config=$(XYZEngine_config)
endif

XYZEditor: XYZEngine
ifneq (,$(XYZEditor_config))
	@echo "==== Building XYZEditor ($(XYZEditor_config)) ===="
	@${MAKE} --no-print-directory -C XYZEditor -f Makefile config=$(XYZEditor_config)
endif

XYZSandbox: XYZEngine
ifneq (,$(XYZSandbox_config))
	@echo "==== Building XYZSandbox ($(XYZSandbox_config)) ===="
	@${MAKE} --no-print-directory -C XYZSandbox -f Makefile config=$(XYZSandbox_config)
endif

XYZServer: XYZEngine
ifneq (,$(XYZServer_config))
	@echo "==== Building XYZServer ($(XYZServer_config)) ===="
	@${MAKE} --no-print-directory -C XYZServer -f Makefile config=$(XYZServer_config)
endif

XYZClient: XYZEngine
ifneq (,$(XYZClient_config))
	@echo "==== Building XYZClient ($(XYZClient_config)) ===="
	@${MAKE} --no-print-directory -C XYZClient -f Makefile config=$(XYZClient_config)
endif

XYZScriptCore:
ifneq (,$(XYZScriptCore_config))
	@echo "==== Building XYZScriptCore ($(XYZScriptCore_config)) ===="
	@${MAKE} --no-print-directory -C XYZScriptCore -f Makefile config=$(XYZScriptCore_config)
endif

XYZScriptExample: XYZScriptCore
ifneq (,$(XYZScriptExample_config))
	@echo "==== Building XYZScriptExample ($(XYZScriptExample_config)) ===="
	@${MAKE} --no-print-directory -C XYZScriptExample -f Makefile config=$(XYZScriptExample_config)
endif

clean:
	@${MAKE} --no-print-directory -C XYZEngine/vendor/GLFW -f Makefile clean
	@${MAKE} --no-print-directory -C XYZEngine/vendor/GLEW -f Makefile clean
	@${MAKE} --no-print-directory -C XYZEngine/vendor/OpenAL-Soft -f Makefile clean
	@${MAKE} --no-print-directory -C XYZEngine/vendor/freetype-2.10.1 -f Makefile clean
	@${MAKE} --no-print-directory -C XYZEngine/vendor/lua -f Makefile clean
	@${MAKE} --no-print-directory -C XYZEngine/vendor/TrianglePP -f Makefile clean
	@${MAKE} --no-print-directory -C XYZEngine -f Makefile clean
	@${MAKE} --no-print-directory -C XYZEditor -f Makefile clean
	@${MAKE} --no-print-directory -C XYZSandbox -f Makefile clean
	@${MAKE} --no-print-directory -C XYZServer -f Makefile clean
	@${MAKE} --no-print-directory -C XYZClient -f Makefile clean
	@${MAKE} --no-print-directory -C XYZScriptCore -f Makefile clean
	@${MAKE} --no-print-directory -C XYZScriptExample -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   GLFW"
	@echo "   GLEW"
	@echo "   OpenAL-Soft"
	@echo "   FreeType"
	@echo "   Lua"
	@echo "   TrianglePP"
	@echo "   XYZEngine"
	@echo "   XYZEditor"
	@echo "   XYZSandbox"
	@echo "   XYZServer"
	@echo "   XYZClient"
	@echo "   XYZScriptCore"
	@echo "   XYZScriptExample"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"